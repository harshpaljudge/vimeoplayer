{"version":3,"sources":["App.js","index.js"],"names":["headerPost","concat","Accept","Authorization","Content-Type","App","_useState","useState","_useState2","Object","slicedToArray","videoUrl","setVideoUrl","handleChange","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","eventObject","file","fileName","fileSize","response","upload","wrap","_context","prev","next","target","files","name","size","toString","console","log","axios","method","url","headers","data","approach","sent","tus","Upload","endPoint","uploadUrl","upload_link","retryDelays","metadata","filename","filetype","type","onError","error","onProgress","bytesUploaded","bytesTotal","percentage","toFixed","onSuccess","start","stop","_x","apply","this","arguments","react_default","createElement","Fragment","class","for","onChange","id","href","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"gQAoBMA,SAXS,UAAAC,OAJK,oCAeD,CACjBC,OAAQ,2CACRC,cAAa,UAAAF,OAjBK,oCAkBlBG,eAAgB,qBAgEHC,MA7Df,WAAe,IAAAC,EACmBC,mBAAS,IAD5BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACII,EADJJ,EAAA,GAGPK,EAAY,eAAAC,EAAAL,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAAG,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAT,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEbR,EAAOD,EAAYU,OAAOC,MAAM,GAChCT,EAAWD,EAAKW,KAChBT,EAAWF,EAAKY,KAAKC,WAC3BC,QAAQC,IAAIf,EAAMC,EAAUC,GALTI,EAAAE,KAAA,EAOIQ,IAAM,CAC3BC,OAAQ,OACRC,IAAG,kCACHC,QAASxC,EACTyC,KAAM,CACJhB,OAAQ,CACNiB,SAAU,MACVT,KAAMV,MAdO,OAObC,EAPaG,EAAAgB,KAmBnBR,QAAQC,IAAIZ,IAGNC,EAAS,IAAImB,IAAIC,OAAOxB,EAAM,CAClCyB,SAAU,kCACVC,UAAWvB,EAASiB,KAAKhB,OAAOuB,YAChCC,YAAa,CAAC,EAAG,IAAM,IAAM,IAAO,KACpCC,SAAU,CACRC,SAAU9B,EAAKW,KACfoB,SAAU/B,EAAKgC,MAEjBb,QAAS,GACTc,QAAS,SAASC,GAChBpB,QAAQC,IAAI,mBAAqBmB,IAEnCC,WAAY,SAASC,EAAeC,GAClC,IAAIC,GAAeF,EAAgBC,EAAc,KAAKE,QAAQ,GAC9DzB,QAAQC,IAAIqB,EAAeC,EAAYC,EAAa,MAEtDE,UAAW,WACT1B,QAAQC,IAAI,sBAAuBX,EAAOJ,KAAKW,KAAMP,EAAOc,KAC5D3B,EAAYa,EAAOc,SAKhBuB,QA7CY,yBAAAnC,EAAAoC,SAAA5C,MAAH,gBAAA6C,GAAA,OAAAlD,EAAAmD,MAAAC,KAAAC,YAAA,GAgDlB,OACEC,EAAAnD,EAAAoD,cAAAD,EAAAnD,EAAAqD,SAAA,KACEF,EAAAnD,EAAAoD,cAAA,OAAKE,MAAM,OAAX,IAAmBH,EAAAnD,EAAAoD,cAAA,oBACnBD,EAAAnD,EAAAoD,cAAA,SAAOG,IAAI,QAAQD,MAAM,OAAzB,mBACAH,EAAAnD,EAAAoD,cAAA,SAAOI,SAAU5D,EAAcwC,KAAK,OAAQqB,GAAG,UAC/CN,EAAAnD,EAAAoD,cAAA,KAAGM,KAAMhE,GAAT,iBC9ENiE,IAASC,OAAOT,EAAAnD,EAAAoD,cAACD,EAAAnD,EAAM6D,WAAP,KACZV,EAAAnD,EAAAoD,cAACU,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.70b542ad.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport tus from 'tus-js-client';\r\nimport axios from 'axios';\r\nimport \"../src/App.css\";\r\n\r\nconst accessToken = '8252c10e54138ccb4befc62fbc62e9dd';\r\n\r\nconst headerDelete = {\r\n  Accept: 'application/vnd.vimeo.*+json;version=3.4',\r\n  Authorization: `bearer ${accessToken}`,\r\n  'Content-Type': 'application/x-www-form-urlencode'\r\n};\r\n\r\nconst headerPatch = {\r\n  'Tus-Resumable': '1.0.0',\r\n  'Upload-Offset': 0,\r\n  'Content-Type': 'application/offset+octet-stream',\r\n  Accept: 'application/vnd.vimeo.*+json;version=3.4'\r\n};\r\n\r\nconst headerPost = {\r\n  Accept: 'application/vnd.vimeo.*+json;version=3.4',\r\n  Authorization: `bearer ${accessToken}`,\r\n  'Content-Type': 'application/json'\r\n};\r\n\r\nfunction App() {\r\n  const [videoUrl, setVideoUrl] = useState('');\r\n\r\n  const handleChange = async eventObject => {\r\n    // Get the selected file from the input element\r\n    const file = eventObject.target.files[0];\r\n    const fileName = file.name;\r\n    const fileSize = file.size.toString();\r\n    console.log(file, fileName, fileSize);\r\n\r\n    const response = await axios({\r\n      method: 'post',\r\n      url: `https://api.vimeo.com/me/videos`,\r\n      headers: headerPost,\r\n      data: {\r\n        upload: {\r\n          approach: 'tus',\r\n          size: fileSize\r\n        }\r\n      }\r\n    });\r\n\r\n    console.log(response);\r\n\r\n    // Create a new tus upload\r\n    const upload = new tus.Upload(file, {\r\n      endPoint: 'https://api.vimeo.com/me/videos',\r\n      uploadUrl: response.data.upload.upload_link,\r\n      retryDelays: [0, 3000, 5000, 10000, 20000],\r\n      metadata: {\r\n        filename: file.name,\r\n        filetype: file.type\r\n      },\r\n      headers: {},\r\n      onError: function(error) {\r\n        console.log('Failed because: ' + error);\r\n      },\r\n      onProgress: function(bytesUploaded, bytesTotal) {\r\n        let percentage = ((bytesUploaded / bytesTotal) * 100).toFixed(2);\r\n        console.log(bytesUploaded, bytesTotal, percentage + '%');\r\n      },\r\n      onSuccess: function() {\r\n        console.log('Download %s from %s', upload.file.name, upload.url);\r\n        setVideoUrl(upload.url);\r\n      }\r\n    });\r\n\r\n    // Start the upload\r\n    upload.start();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div class=\"app\" > <h1> Vimeo</h1>\r\n      <label for=\"files\" class=\"btn\">Upload To Vimeo</label>\r\n      <input onChange={handleChange} type='file'  id=\"files\"/>\r\n      <a href={videoUrl}>Video link</a></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'));\r\n"],"sourceRoot":""}